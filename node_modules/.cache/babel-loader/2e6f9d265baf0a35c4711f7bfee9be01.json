{"ast":null,"code":"import createStore from 'unistore';\nimport axios from 'axios';\n/**\n *\n * @version 1.0.1\n * @author [Lelianto Eko Pradana](https://github.com/Lelianto)\n * @param {boolean} isSignUp User doing sign up status\n * @param {string} typeText Type of input password (password or text)\n * @param {list} bookEmptyStock Contains books with empty stock\n * @param {string} remainingBook \n * @param {string} addCartStatus Contains response message of stock status\n * \n */\n\nconst initialState = {\n  discount: '',\n  isSignUp: false,\n  typeText: 'password',\n  bookEmptyStock: [],\n  baseUrl: 'https://kutubuku.store',\n  remainingBook: '',\n  addCartStatus: '',\n  adminProductKeyword: '',\n  adminKeyword: '',\n  lengthCart: 0,\n  paymentId: '',\n  cartId: '',\n  userId: '',\n  adminAllPayment: [],\n  userAllCart: [],\n  adminAllCart: [],\n  userData: [],\n  userCartId: 0,\n  adminAllBook: [],\n  allUser: [],\n  bookOwn: [],\n  orderCode: '',\n  orderDate: '',\n  totalPayment: '',\n  listResults: [],\n  listCategory: [],\n  shippingCost: 0,\n  totalPrice: 0,\n  carts: [],\n  bookId: '',\n  books: [],\n  bookById: [],\n  userById: [],\n  id: '',\n  isLoading: true,\n  token: '',\n  photo: '',\n  fullName: '',\n  email: '',\n  password: '',\n  isLogin: false,\n  Bearer: '',\n  title: '',\n  writer: '',\n  pageTitle: '',\n  totalPage: 0,\n  publishDate: '',\n  isbn: '',\n  genre: '',\n  bahasa: '',\n  penerbit: '',\n  berat: 0,\n  lebar: 0,\n  panjang: 0,\n  bookCover: '',\n  status: '',\n  harga: 0,\n  totalBeli: [],\n  stok: [],\n  bookPhoto: '',\n  keyword: '',\n  kategori: '',\n  disable: true,\n  address: true,\n  streetName: '',\n  rtRw: '',\n  village: '',\n  region: '',\n  cityState: '',\n  province: '',\n  postalCode: '',\n  phoneNumber: '',\n  validasiPostBuku: false,\n  validasiUpdateBuku: false,\n  cartContent: true,\n  newSubTotal: 0,\n  newTotalPrice: []\n};\nexport const store = createStore(initialState);\nexport const actions = store => ({\n  changeInput: async (state, e) => {\n    await store.setState({\n      [e.target.name]: e.target.value\n    });\n  },\n  changeInputDiscount: async (state, e) => {\n    await store.setState({\n      [e.target.name]: e.target.value\n    });\n  },\n  changeInputCart: async (state, e, index, price) => {\n    console.log(index);\n    console.log(price);\n    await store.setState({\n      'stok': {\n        id: e.target.id,\n        [e.target.name]: e.target.value\n      }\n    });\n    state.totalBeli.push(store.getState().stok);\n  },\n  // Function for Sign Up\n  postSignUp: async state => {\n    const fullName = state.fullName;\n    const password = state.password;\n    const email = state.email;\n    const mydata = {\n      nama_lengkap: fullName,\n      email: email,\n      kata_sandi: password\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/user\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    await axios(req).then(response => {\n      store.setState({\n        isSignUp: true\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for Login\n  postLogin: async state => {\n    const password = state.password;\n    const email = state.email;\n    const mydata = {\n      email: email,\n      kata_sandi: password\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/token\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    await axios(req).then(response => {\n      localStorage.setItem(\"email\", email);\n      localStorage.setItem(\"isLogin\", true);\n      localStorage.setItem(\"token\", response.data.token);\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for user upload book\n  postBook: async state => {\n    const judul = state.title;\n    const penulis = state.writer;\n    const jumlah_halaman = state.totalPage;\n    const tanggal_terbit = state.publishDate;\n    const isbn = state.isbn;\n    const genre = state.genre;\n    const bahasa = state.bahasa;\n    const penerbit = state.penerbit;\n    const berat = state.berat * 1;\n    const lebar = state.lebar * 1;\n    const panjang = state.panjang * 1;\n    const jenis_cover = state.bookCover;\n    const status = state.status;\n    const harga = state.harga * 1;\n    const stok = state.stok * 1;\n    const foto_buku = state.bookPhoto;\n    const sinopsis = state.sinopsis;\n    const mybook = {\n      judul: judul,\n      penulis: penulis,\n      jumlah_halaman: jumlah_halaman,\n      tanggal_terbit: tanggal_terbit,\n      isbn: isbn,\n      genre: genre,\n      bahasa: bahasa,\n      penerbit: penerbit,\n      berat: berat,\n      lebar: lebar,\n      panjang: panjang,\n      jenis_cover: jenis_cover,\n      status: status,\n      harga: harga,\n      stok: stok,\n      foto_buku: foto_buku,\n      sinopsis: sinopsis\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/book\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: mybook\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'validasiPostBuku': true\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for deleting Book\n  deleteItem: async state => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl + \"/book/edit/\" + state.bookId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        bookId: ''\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for delete cart by user\n  deleteCartItem: async state => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl + \"/cart/product/\" + state.userCartId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        bookId: ''\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for update book by user\n  updateBook: async state => {\n    const judul = state.title;\n    const penulis = state.writer;\n    const totalPage = state.totalPage;\n    const tanggal_terbit = state.publishDate;\n    const isbn = state.isbn;\n    const genre = state.genre;\n    const bahasa = state.bahasa;\n    const penerbit = state.penerbit;\n    const berat = state.berat * 1;\n    const lebar = state.lebar * 1;\n    const panjang = state.panjang * 1;\n    const jenis_cover = state.bookCover;\n    const status = state.status;\n    const harga = state.harga * 1;\n    const stok = state.stok * 1;\n    const foto_buku = state.bookPhoto;\n    const sinopsis = state.sinopsis;\n    const mybook = {\n      judul: judul,\n      penulis: penulis,\n      jumlah_halaman: totalPage,\n      tanggal_terbit: tanggal_terbit,\n      isbn: isbn,\n      genre: genre,\n      bahasa: bahasa,\n      penerbit: penerbit,\n      berat: berat,\n      lebar: lebar,\n      panjang: panjang,\n      jenis_cover: jenis_cover,\n      status: status,\n      harga: harga,\n      stok: stok,\n      foto_buku: foto_buku,\n      sinopsis: sinopsis\n    };\n    const req = {\n      method: \"put\",\n      url: state.baseUrl + \"/book/edit/\" + state.book_I,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: mybook\n    };\n    await axios(req).then(response => {\n      localStorage.setItem('user_id', response.data.user_id);\n      store.setState({\n        'validasiUpdateBuku': true\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for add book to cart\n  addCartItem: async state => {\n    const book_id = state.bookById.id;\n    const judul = state.bookById.judul;\n    const penulis = state.bookById.penulis;\n    const jenis_cover = state.bookById.jenis_cover;\n    const foto_buku = state.bookById.foto_buku;\n    const harga = state.bookById.harga;\n    const stok = 1;\n    const berat = state.bookById.berat;\n    const status_jual = state.bookById.status;\n    const buybook = {\n      book_id: book_id,\n      judul: judul,\n      penulis: penulis,\n      berat: berat,\n      jenis_cover: jenis_cover,\n      harga: harga,\n      stok: stok,\n      foto_buku: foto_buku,\n      status_jual: status_jual\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/cart/add\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: buybook\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'addCartStatus': response.data.message\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for calculating total price\n  Calculate: async state => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl + \"/cart/total\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        \"totalPrice\": response.data,\n        \"disable\": false\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for getting expedition price\n  CalculateExpeditionPrice: async state => {\n    const nama_jalan = state.streetName;\n    const rt_rw = state.rt_rw;\n    const kelurahan = state.village;\n    const kecamatan = state.region;\n    const kota_kabupaten = state.cityState;\n    const provinsi = state.province;\n    const kode_pos = state.postalCode;\n    const nomor_telepon = state.phoneNumber;\n    const myaddress = {\n      nama_jalan: nama_jalan,\n      rt_rw: rt_rw,\n      kelurahan: kelurahan,\n      kecamatan: kecamatan,\n      kota_kabupaten: kota_kabupaten,\n      provinsi: provinsi,\n      kode_pos: kode_pos,\n      nomor_telepon: nomor_telepon\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/payment/ongkir\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: myaddress\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'shippingCost': response.data\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for getting final transaction price \n  FinalTransactionPayment: async state => {\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/payment_confirm/bill\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'totalPayment': state.totalPayment,\n        'orderDate': response.data.tanggal_pemesanan,\n        'orderCode': response.data.nomor_pemesanan\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for searching book by title or writer\n  searchBook: async state => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl + \"/book/search?keyword=\" + store.getState().keyword\n    };\n    console.log(req);\n    await axios(req).then(response => {\n      store.setState({\n        'listResults': response.data\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for searching and grouping user by category\n  categoryBook: async (state, e) => {\n    store.setState({\n      [e.target.name]: e.target.value\n    });\n    const req = {\n      method: \"get\",\n      url: state.baseUrl + \"/book/category?keyword=\" + store.getState().kategori\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'listCategory': response.data\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for updating amount of buying item\n  updateBuy: async state => {\n    const listBuy = state.totalBeli;\n\n    for (const product of listBuy) {\n      const buybook = {\n        stok: product.stok\n      };\n      const req = {\n        method: \"put\",\n        url: state.baseUrl + \"/cart/product/\" + product.id,\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem('token')\n        },\n        data: buybook\n      };\n      await axios(req).then(response => {\n        const listInCart = store.getState().carts.filter(item => {\n          if (item.id == product.id && item.email === localStorage.getItem('email') && item.foto_buku !== null && item.judul !== null && item.harga !== null && item.status_cart === false && item.berat !== null) {\n            return item;\n          }\n\n          return false;\n        });\n        const listBooks = [];\n\n        for (const book of listInCart) {\n          if (response.data.message == 'stok buku tidak mencukupi' && book.book_id) {\n            listBooks.push(book.judul);\n          }\n        }\n\n        store.setState({\n          bookEmptyStock: listBooks\n        });\n      }).catch(error => {\n        return false;\n      });\n    }\n  },\n  // Function for deleting user by admin\n  deleteUser: async (state, e) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl + \"/user/\" + state.userId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        userId: ''\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for deleting cart on user side\n  deleteCart: async (state, e) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl + \"/cart/product/\" + state.cartId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        userId: ''\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for searching payment by admin\n  searchPayment: async state => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl + \"/payment_confirm/code?keyword=\" + store.getState().keyword\n    };\n    console.log(req);\n    await axios(req).then(response => {\n      store.setState({\n        'listResults': response.data\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  }\n});","map":{"version":3,"sources":["/home/alta17/Desktop/React_Portofolio/porto_react/src/store.js"],"names":["createStore","axios","initialState","discount","isSignUp","typeText","bookEmptyStock","baseUrl","remainingBook","addCartStatus","adminProductKeyword","adminKeyword","lengthCart","paymentId","cartId","userId","adminAllPayment","userAllCart","adminAllCart","userData","userCartId","adminAllBook","allUser","bookOwn","orderCode","orderDate","totalPayment","listResults","listCategory","shippingCost","totalPrice","carts","bookId","books","bookById","userById","id","isLoading","token","photo","fullName","email","password","isLogin","Bearer","title","writer","pageTitle","totalPage","publishDate","isbn","genre","bahasa","penerbit","berat","lebar","panjang","bookCover","status","harga","totalBeli","stok","bookPhoto","keyword","kategori","disable","address","streetName","rtRw","village","region","cityState","province","postalCode","phoneNumber","validasiPostBuku","validasiUpdateBuku","cartContent","newSubTotal","newTotalPrice","store","actions","changeInput","state","e","setState","target","name","value","changeInputDiscount","changeInputCart","index","price","console","log","push","getState","postSignUp","mydata","nama_lengkap","kata_sandi","req","method","url","headers","data","then","response","catch","error","postLogin","localStorage","setItem","postBook","judul","penulis","jumlah_halaman","tanggal_terbit","jenis_cover","foto_buku","sinopsis","mybook","Authorization","getItem","deleteItem","deleteCartItem","updateBook","book_I","user_id","addCartItem","book_id","status_jual","buybook","message","Calculate","CalculateExpeditionPrice","nama_jalan","rt_rw","kelurahan","kecamatan","kota_kabupaten","provinsi","kode_pos","nomor_telepon","myaddress","FinalTransactionPayment","tanggal_pemesanan","nomor_pemesanan","searchBook","categoryBook","updateBuy","listBuy","product","listInCart","filter","item","status_cart","listBooks","book","deleteUser","deleteCart","searchPayment"],"mappings":"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","sourcesContent":["import createStore from 'unistore';\nimport axios from 'axios';\n\n/**\n *\n * @version 1.0.1\n * @author [Lelianto Eko Pradana](https://github.com/Lelianto)\n * @param {boolean} isSignUp User doing sign up status\n * @param {string} typeText Type of input password (password or text)\n * @param {list} bookEmptyStock Contains books with empty stock\n * @param {string} remainingBook \n * @param {string} addCartStatus Contains response message of stock status\n * \n */\n\nconst initialState = {\n  discount:'',\n  isSignUp:false,\n  typeText:'password',\n  bookEmptyStock:[],\n  baseUrl:'https://kutubuku.store',\n  remainingBook:'',\n  addCartStatus:'',\n  adminProductKeyword:'',\n  adminKeyword:'',\n  lengthCart:0,\n  paymentId:'', \n  cartId:'',\n  userId:'', \n  adminAllPayment:[],\n  userAllCart:[],\n  adminAllCart:[],\n  userData:[],\n  userCartId:0, \n  adminAllBook:[],\n  allUser:[],\n  bookOwn:[],\n  orderCode:'',\n  orderDate:'', \n  totalPayment:'',\n  listResults:[],\n  listCategory:[],\n  shippingCost:0,\n  totalPrice:0,\n  carts:[],\n  bookId:'',\n  books:[],\n  bookById:[],\n  userById:[],\n  id:'',\n  isLoading:true,\n  token:'',\n  photo:'',\n  fullName:'',\n  email:'',\n  password:'',\n  isLogin: false,\n  Bearer:'',\n  title:'',\n  writer:'',\n  pageTitle:'',\n  totalPage:0,\n  publishDate:'',\n  isbn:'',\n  genre:'',\n  bahasa:'',\n  penerbit:'',\n  berat:0,\n  lebar:0,\n  panjang:0,\n  bookCover:'',\n  status:'',\n  harga:0,\n  totalBeli:[],\n  stok:[],\n  bookPhoto:'',\n  keyword:'',\n  kategori:'',\n  disable:true,\n  address: true,\n  streetName:'',\n  rtRw:'',\n  village:'',   \n  region:'', \n  cityState:'',\n  province:'', \n  postalCode:'', \n  phoneNumber:'',\n  validasiPostBuku:false,\n  validasiUpdateBuku:false,\n  cartContent:true,\n  newSubTotal:0,\n  newTotalPrice:[] \n}\n\nexport const store = createStore(initialState)\n\nexport const actions = store => ({\n  changeInput : async (state,e) => {\n    await store.setState({ [e.target.name]: e.target.value});\n  },\n\n  changeInputDiscount : async (state,e) => {\n    await store.setState({ [e.target.name]: e.target.value});\n  },\n\n  changeInputCart : async (state,e, index, price) => {\n    console.log(index)\n    console.log(price)\n    await store.setState({ \n      'stok':{ id: e.target.id,\n        [e.target.name]: e.target.value}\n    });\n    state.totalBeli.push(store.getState().stok)\n  },\n\n  // Function for Sign Up\n  postSignUp : async (state) => {\n      const fullName= state.fullName      \n      const password= state.password      \n      const email = state.email\n      const mydata = {\n          nama_lengkap: fullName,\n          email: email,\n          kata_sandi: password      \n      };\n      const req = {\n        method: \"post\",\n        url: state.baseUrl+\"/user\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: mydata\n      };\n      await axios(req)\n        .then(response => {\n            store.setState({\n                isSignUp: true\n            });\n        })\n        .catch(error => {\n          return false\n      })\n  },\n\n  // Function for Login\n  postLogin : async (state) => {\n    const password= state.password    \n    const email = state.email\n    const mydata = {\n        email: email,\n        kata_sandi: password    };\n\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/token\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n\n    await axios(req)\n      .then(response => {\n        localStorage.setItem(\"email\", email);\n        localStorage.setItem(\"isLogin\", true);\n        localStorage.setItem(\"token\", response.data.token);\n      })\n      .catch(error => {\n          return false\n    })\n  },\n\n  // Function for user upload book\n  postBook : async (state) => {\n    const judul = state.title\n    const penulis = state.writer\n    const jumlah_halaman= state.totalPage    \n    const tanggal_terbit = state.publishDate\n    const isbn = state.isbn\n    const genre = state.genre\n    const bahasa = state.bahasa\n    const penerbit = state.penerbit\n    const berat = state.berat * 1\n    const lebar = state.lebar * 1\n    const panjang = state.panjang * 1\n    const jenis_cover = state.bookCover\n    const status = state.status\n    const harga = state.harga * 1\n    const stok = state.stok * 1\n    const foto_buku = state.bookPhoto\n    const sinopsis = state.sinopsis\n    const mybook = {\n      judul : judul,\n      penulis : penulis,\n      jumlah_halaman : jumlah_halaman,\n      tanggal_terbit : tanggal_terbit,\n      isbn : isbn,\n      genre : genre,\n      bahasa : bahasa,\n      penerbit : penerbit,\n      berat : berat,\n      lebar : lebar,\n      panjang : panjang,\n      jenis_cover : jenis_cover,\n      status : status,\n      harga : harga,\n      stok : stok,\n      foto_buku : foto_buku,\n      sinopsis : sinopsis\n    };\n\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/book\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: mybook\n    };\n    await axios(req)\n        .then(response => {\n          store.setState({\n            'validasiPostBuku':true\n          })\n          return response\n        })\n        .catch(error => {\n          return false\n    })\n  },\n\n  // Function for deleting Book\n  deleteItem : async (state) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl+\"/book/edit/\"+state.bookId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n            bookId:''\n        })\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for delete cart by user\n  deleteCartItem : async (state) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl+\"/cart/product/\"+state.userCartId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n            bookId:''\n        })\n    })\n    .catch(error => {\n        return false\n    })\n  },\n\n  // Function for update book by user\n  updateBook : async (state) => {\n    const judul = state.title\n    const penulis = state.writer\n    const totalPage = state.totalPage    \n    const tanggal_terbit = state.publishDate\n    const isbn = state.isbn\n    const genre = state.genre\n    const bahasa = state.bahasa\n    const penerbit = state.penerbit\n    const berat = state.berat * 1\n    const lebar = state.lebar * 1\n    const panjang = state.panjang * 1\n    const jenis_cover = state.bookCover\n    const status = state.status\n    const harga = state.harga * 1\n    const stok = state.stok * 1\n    const foto_buku = state.bookPhoto\n    const sinopsis = state.sinopsis\n    const mybook = {\n      judul : judul,\n      penulis : penulis,\n      jumlah_halaman : totalPage,\n      tanggal_terbit : tanggal_terbit,\n      isbn : isbn,\n      genre : genre,\n      bahasa : bahasa,\n      penerbit : penerbit,\n      berat : berat,\n      lebar : lebar,\n      panjang : panjang,\n      jenis_cover : jenis_cover,\n      status : status,\n      harga : harga,\n      stok : stok,\n      foto_buku : foto_buku,\n      sinopsis : sinopsis\n    };\n    const req = {\n      method: \"put\",\n      url: state.baseUrl+\"/book/edit/\"+state.book_I,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: mybook\n    };\n    await axios(req)\n      .then(response => {\n        localStorage.setItem('user_id', response.data.user_id)\n        store.setState({\n          'validasiUpdateBuku':true\n        })\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for add book to cart\n  addCartItem : async (state) => {\n    const book_id = state.bookById.id\n    const judul = state.bookById.judul\n    const penulis = state.bookById.penulis\n    const jenis_cover = state.bookById.jenis_cover\n    const foto_buku = state.bookById.foto_buku\n    const harga = state.bookById.harga\n    const stok = 1\n    const berat = state.bookById.berat\n    const status_jual = state.bookById.status\n    const buybook = {\n      book_id : book_id,\n      judul : judul,\n      penulis : penulis,\n      berat : berat,\n      jenis_cover : jenis_cover,\n      harga : harga,\n      stok : stok,\n      foto_buku : foto_buku,\n      status_jual : status_jual\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/cart/add\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: buybook\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n          'addCartStatus':response.data.message\n        })\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for calculating total price\n  Calculate : async (state) => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl+\"/cart/total\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n        .then(response => {\n          store.setState({\n            \"totalPrice\": response.data,\n            \"disable\": false\n          })\n          return response\n        })\n        .catch(error => {\n          return false\n    })\n\n\n  },\n\n  // Function for getting expedition price\n  CalculateExpeditionPrice : async (state) => {\n    const nama_jalan = state.streetName\n    const rt_rw = state.rt_rw\n    const kelurahan = state.village\n    const kecamatan = state.region\n    const kota_kabupaten = state.cityState\n    const provinsi = state.province\n    const kode_pos = state.postalCode\n    const nomor_telepon = state.phoneNumber\n    const myaddress = {\n      nama_jalan: nama_jalan,\n      rt_rw: rt_rw,\n      kelurahan: kelurahan,\n      kecamatan : kecamatan,\n      kota_kabupaten : kota_kabupaten,\n      provinsi : provinsi,\n      kode_pos : kode_pos,\n      nomor_telepon : nomor_telepon\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/payment/ongkir\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: myaddress\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n          'shippingCost':response.data\n        })\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for getting final transaction price \n  FinalTransactionPayment : async (state) => {\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/payment_confirm/bill\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n          'totalPayment':state.totalPayment,\n          'orderDate':response.data.tanggal_pemesanan,\n          'orderCode':response.data.nomor_pemesanan\n        })\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for searching book by title or writer\n  searchBook : async (state) => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl+\"/book/search?keyword=\"+store.getState().keyword,\n    };\n    console.log(req)\n    await axios(req)\n      .then(response => {\n        store.setState({\n          'listResults':response.data\n        })\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for searching and grouping user by category\n  categoryBook : async (state,e) => {\n    store.setState({ [e.target.name]: e.target.value });\n    const req = {\n      method: \"get\",\n      url: state.baseUrl+\"/book/category?keyword=\"+store.getState().kategori\n    };\n\n    await axios(req)\n        .then(response => {\n          store.setState({\n            'listCategory':response.data\n          })\n        })\n        .catch(error => {\n          return false\n    })\n  },\n\n  // Function for updating amount of buying item\n  updateBuy : async (state) => {\n    const listBuy = state.totalBeli\n    for (const product of listBuy) {\n      const buybook = {\n        stok : product.stok\n      };\n      const req = {\n        method: \"put\",\n        url: state.baseUrl+\"/cart/product/\"+product.id,\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem('token')\n        },\n        data: buybook\n      };\n      await axios(req)\n          .then(response => {\n            const listInCart = store.getState().carts.filter(item => {\n              if (item.id == product.id && item.email === localStorage.getItem('email') && item.foto_buku !== null && item.judul !== null && item.harga !== null && item.status_cart === false && item.berat !== null) {\n                  return item;\n              }\n              return false\n            })\n            const listBooks = []\n            for(const book of listInCart){\n              if(response.data.message=='stok buku tidak mencukupi' && book.book_id){\n                listBooks.push(book.judul)\n              }\n            }\n            store.setState({\n              bookEmptyStock:listBooks\n            })\n          })\n          .catch(error => {\n            return false\n      })\n    }\n  },\n\n  // Function for deleting user by admin\n  deleteUser : async (state,e) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl+\"/user/\"+state.userId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n              userId:''\n          })\n    })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for deleting cart on user side\n  deleteCart : async (state,e) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl+\"/cart/product/\"+state.cartId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n          userId:''\n          })\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for searching payment by admin\n  searchPayment : async (state) => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl+\"/payment_confirm/code?keyword=\"+store.getState().keyword\n    };\n    console.log(req)\n    await axios(req)\n      .then(response => {\n        store.setState({\n          'listResults':response.data\n        })\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  }\n\n  });\n\n\n\n"]},"metadata":{},"sourceType":"module"}